Harrison Ahearn
Adnan Jalal

ARCHITECTURE:
40image.c: holds main function, calls compress40 or decompress40 based on flags
obtained from command line.

compress40.c: Contains compress40 and decompress40 which are the two driving
functions of the 40image program. compress40 calls rgb_to_v after reading in
a Pnm_ppm and then passes the result to a mapping function. The mapping
function calls helper function compress_to_words which converts 4 pixels into
one word and then outputs that word. decompress40 maps helper function
decompress_words over a blank UArray2. This UArray2 is filled with rgb data
from decompressing words read in from a file. The UArray2 is then read out
by assigning it to the pixels UArray2 in a Pnm_ppm and then calling
Pnm_ppmwrite.

convert.h: This file is a header file for 2 functions, rgb_to_v and
apply_rgb_to_v. These functions, when used together, convert an A2Methods_
UArray2 to a Pnm_ppm which holds rgb data. It also defines a struct a2_closure
which holds methods, an A2Methods_UArray2, and an unsigned denominator value
which is used as the closure for the apply_rgb_to_v function

convert.c: This file contains the implementation for convert.h. It defines
functions apply_rgb_to_v and rgb_to_v. rgb_to_v creates a closure which
contains an A2Methods_UArray2 and a methods suite. This closure is then passed
to every instance of apply_rgb_to_v which is called by a mapping function given
to and called in rgb_to_v. apply_rgb_to_v modifies values in the closure so
that rgb_to_v can return a Pnm_ppm

bitpack.c: this file is an implementation of the bitpack.h class. It is used
to store numbers, which contain some number of bits to represent their value,
with less bits. This file also contains implementation for accessing inidivual
sequences of bits from a 64 bit word.

pnm_ybr.h: holds a typedef that defines the type Pnm_ybr as a struct Pnm_ybr *
which holds floats that represent pb, pr, and y

shift.h: holds basic functions for shifting uint64_t's a desired direction and
distance (amount of bits to shift over by)

Completed:
bitpack.c
compress40.c

hours analyzing: 20
hours solving: 20
