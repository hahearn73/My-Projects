4
print
#t print not print
clear print
4 print drop print 
5 dup print drop drop drop 
10 5 print swap print swap print
5 5 + print
drop drop
5 - print
-1 * print
-1 / print
3 mod print
1 0 /
clear
#t #f == print
#f == print
3 5 == print
5 dup == print
drop drop
-1 5 > print drop
-1 -3 > print drop
-1 5 < print drop
-1 -7 < print drop
1 1 > print drop
1 1 < print drop
drop drop
100 100 >= print
100 200 >= print
100 50 >= print
100 100 <= print
100 200 <= print
100 50 <= print
clear 
{ 1 2 3 + + } print 
{ 1 { 3 { 54 + { * / { 3 } { 45 + } } } } } print
{ } print
{ file.cylc } print clear
{ 1 2 + } exec print clear
{ 1 2 > } exec print clear
2 { 100 + } exec print clear
2 { 100 - } exec print clear
{ 1 2 + { 3 { * } } } exec print swap print clear
clear
2
#t { 3 + } { 2 * } if print 
drop drop
3 4 <
{ #t } { #f } if print
clear 
3 4 <
{ #f } { #t } if print
clear 
4 dup 10 ==
{ 1 0 / }
{ 6 + dup 10 < { 10 > } { 10 == } if }
if
print clear
5
{ fact.cylc } file
print
5 print
