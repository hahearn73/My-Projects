% Harry Ahearn ATestFile.cyl CalcYouLater 10/26/21
4
print % tests input of numbers and print function

#t print not print % tests input of true and false booleans and not command
clear print % tests clear command, should throw error for printing empty stack

4 print drop print 
% tests drop, throws error for empty stack showing it was dropped

5 dup print drop drop drop 
% tests dup command, should throw only one error for empty stack

10 5 print swap print swap print
% tests swap, should print 5 then 10 then 5

% quit % quits the program

% testing math operations
5 5 + print % should output 10
drop drop % throws error signifying the stack does not keep excess datum
5 - print % should output 5
-1 * print % should output -5
-1 / print % should output 5
3 mod print % should output 2
1 0 / % throws error and keeps accepting input
clear

% testing relational operators
% == for bools and ints
#t #f == print % should print false
#f == print % should print true
3 5 == print % false 
5 dup == print % true 
drop drop % throws error signifying the stack does not keep excess datum

% > and < 
-1 5 > print drop % should output false 
-1 -3 > print drop % should output true 
-1 5 < print drop % should output true 
-1 -7 < print drop % should output false 
1 1 > print drop % false 
1 1 < print drop % false 
drop drop % throws error signifying the stack does not keep excess datum

% >=
100 100 >= print % true 
100 200 >= print % false 
100 50 >= print % true 

% <=
100 100 <= print % true 
100 200 <= print % true
100 50 <= print % false
clear 

% rstring testing 
{ 1 2 3 + + } print 
{ 1 { 3 { 54 + { * / { 3 } { 45 + } } } } } print
{ } print
{ file.cylc } print clear

% exec testing 
{ 1 2 + } exec print clear % should print 3
{ 1 2 > } exec print clear % should print false
2 { 100 + } exec print clear % should print 102
2 { 100 - } exec print clear % should print -98
{ 1 2 + { 3 { * } } } exec print swap print clear
% should print the nested r string then print 3
% { { quit } exec 5 5 + } exec % when not commented out it quits as it should

% if testing
clear
2
#t { 3 + } { 2 * } if print % should print 5
drop drop % throws error signifying the stack does not keep excess datum
3 4 <
{ #t } { #f } if print % should output true
clear 
3 4 <
{ #f } { #t } if print % should output false
clear 
% nested ifs 
4 dup 10 ==
{ 1 0 / }
{ 6 + dup 10 < { 10 > } { 10 == } if }
if
print clear % should print true

% file testing
5
{ fact.cylc } file
print % should print 120
5 print % shows that input can still be taken after the file command is called
quit % works the same whether commented out or not 